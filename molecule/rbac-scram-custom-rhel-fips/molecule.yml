---
### Installs Confluent Platform Cluster on RHEL8.
### RBAC enabled.
### SCRAM enabled.
### TLS with custom certs enabled.
### Additional System Admins added.
### Additional Scram Users added.
### Kafka Connect Custom arguments.
### SSO authentication using OIDC in Control center using Azure IdP
### FIPS enabled
### Installs Two unique Kafka Connect Clusters with unique connectors.

driver:
  name: docker
platforms:
  - name: ldap1${BUILD_NUMBER}
    hostname: ldap1${BUILD_NUMBER}.confluent${BUILD_NUMBER}
    groups:
      - ldap_server
    image: centos:centos8
    dockerfile: ../Dockerfile-centos8-base.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent${BUILD_NUMBER}
  - name: ${KRAFT_CONTROLLER:-zookeeper}1${BUILD_NUMBER}
    hostname: ${KRAFT_CONTROLLER:-zookeeper}1${BUILD_NUMBER}.confluent${BUILD_NUMBER}
    groups:
      - ${CONTROLLER_HOSTGROUP:-zookeeper}
    image: redhat/ubi8-minimal
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent${BUILD_NUMBER}
  - name: kafka-broker1${BUILD_NUMBER}
    hostname: kafka-broker1${BUILD_NUMBER}.confluent${BUILD_NUMBER}
    groups:
      - kafka_broker
    image: redhat/ubi8-minimal
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent${BUILD_NUMBER}
  - name: kafka-broker2${BUILD_NUMBER}
    hostname: kafka-broker2${BUILD_NUMBER}.confluent${BUILD_NUMBER}
    groups:
      - kafka_broker
    image: redhat/ubi8-minimal
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent${BUILD_NUMBER}
  - name: kafka-broker3${BUILD_NUMBER}
    hostname: kafka-broker3${BUILD_NUMBER}.confluent${BUILD_NUMBER}
    groups:
      - kafka_broker
    image: redhat/ubi8-minimal
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent${BUILD_NUMBER}
  - name: schema-registry1${BUILD_NUMBER}
    hostname: schema-registry1${BUILD_NUMBER}.confluent${BUILD_NUMBER}
    groups:
      - schema_registry
    image: redhat/ubi8-minimal
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent${BUILD_NUMBER}
  - name: kafka-rest1${BUILD_NUMBER}
    hostname: kafka-rest1${BUILD_NUMBER}.confluent${BUILD_NUMBER}
    groups:
      - kafka_rest
    image: redhat/ubi8-minimal
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent${BUILD_NUMBER}
  - name: kafka-connect1${BUILD_NUMBER}
    hostname: kafka-connect1${BUILD_NUMBER}.confluent${BUILD_NUMBER}
    groups:
      - kafka_connect
      - cluster1
    image: redhat/ubi8-minimal
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent${BUILD_NUMBER}
  - name: kafka-connect2${BUILD_NUMBER}
    hostname: kafka-connect2${BUILD_NUMBER}.confluent${BUILD_NUMBER}
    groups:
      - kafka_connect
      - cluster1
    image: redhat/ubi8-minimal
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent${BUILD_NUMBER}
  - name: ksql1${BUILD_NUMBER}
    hostname: ksql1${BUILD_NUMBER}.confluent${BUILD_NUMBER}
    groups:
      - ksql
    image: redhat/ubi8-minimal
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    networks:
      - name: confluent${BUILD_NUMBER}
  - name: control-center1${BUILD_NUMBER}
    hostname: control-center1${BUILD_NUMBER}.confluent${BUILD_NUMBER}
    groups:
      - control_center
    image: redhat/ubi8-minimal
    dockerfile: ../Dockerfile-rhel-java17.j2
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    privileged: true
    ## Commenting below to avoid port collision on jenkins server
    ## Uncomment to view c3 in browser at localhost:9021
    #  published_ports:
    #    - "9021:9021"
    networks:
      - name: confluent${BUILD_NUMBER}
provisioner:
  inventory:
    group_vars:
      all:
        scenario_name: rbac-scram-custom-rhel-fips
        fips_enabled: true
        # Test additional scram user
        sasl_scram_users:
          zookeeper:
            principal: zookeeper
            password: zookeeper
          kafka:
            principal: mds
            password: mds
          admin:
            principal: admin
            password: admin
          client:
            principal: client
            password: client
          kafka_connect:
            principal: connectAdmin
            password: connectAdmin
          control_center:
            principal: control_center
            password: control_center
          ksql:
            principal: ksql
            password: ksql
          schema_registry:
            principal: schema_registry
            password: schema_registry

        ssl_enabled: true
        regenerate_ca: true

        rbac_enabled: true
        regenerate_token_pem: true
        create_mds_certs: true
        mds_super_user: mds
        mds_super_user_password: mds
        kafka_broker_ldap_user: mds
        kafka_broker_ldap_password: mds
        schema_registry_ldap_user: schemaregistryUser
        schema_registry_ldap_password: schemaregistryUser
        kafka_connect_ldap_user: connectAdmin
        kafka_connect_ldap_password: connectAdmin
        ksql_ldap_user: ksqlDBAdmin
        ksql_ldap_password: ksqlDBAdmin
        kafka_rest_ldap_user: restAdmin
        kafka_rest_ldap_password: restAdmin
        control_center_ldap_user: controlcenterAdmin
        control_center_ldap_password: controlcenterAdmin
        kafka_connect_replicator_ldap_user: replicatorUser
        kafka_connect_replicator_ldap_password: replicatorUser
        
        kafka_connect_cluster_name: "justin-connect"
        confluent.balancer.enable: true
        confluent.balancer.heal.uneven.load.trigger: ANY_UNEVEN_LOAD
        confluent.balancer.heal.broker.failure.threshold.ms: 3600000
        confluent.balancer.throttle.bytes.per.second: 10485760

        kafka_broker_principal: 'User:kafka;User:ANONYMOUS'
        
        kafka_broker_custom_listeners:
          client_listener:
            name: CLIENT
            port: 9093
            ssl_enabled: false
            ssl_mutual_auth_enabled: false
            sasl_protocol: none
          scram_client:
            name: SCRAM_CLIENT
            port: 9095
            ssl_enabled: true
            ssl_mutual_auth_enabled: false
            sasl_protocol: scram

        mds_super_user: mds
        mds_super_user_password: password

        schema_registry_ldap_user: schema_registry
        schema_registry_ldap_password: password

        kafka_connect_ldap_user: kafka_connect
        kafka_connect_ldap_password: password

        ksql_ldap_user: ksql
        ksql_ldap_password: password

        kafka_rest_ldap_user: kafka_rest
        kafka_rest_ldap_password: password

        control_center_ldap_user: control_center
        control_center_ldap_password: password

        rbac_component_additional_system_admins:
          - User:mds

        kafka_broker_additional_system_admins:
          - User:mds

        kafka_broker_custom_properties:
          ldap.java.naming.factory.initial: com.sun.jndi.ldap.LdapCtxFactory
          ldap.com.sun.jndi.ldap.read.timeout: 3000
          ldap.java.naming.provider.url: "ldap://{{ groups['ldap_server'][0] }}:389"
          ldap.java.naming.security.principal: uid=mds,OU=rbac,DC=example,DC=com
          ldap.java.naming.security.credentials: password
          ldap.user.search.base: OU=rbac,DC=example,DC=com
          ldap.group.search.base: OU=rbac,DC=example,DC=com
          ldap.user.name.attribute: uid
          ldap.user.memberof.attribute.pattern: CN=(.*),OU=rbac,DC=example,DC=com
          ldap.group.name.attribute: cn
          ldap.group.member.attribute.pattern: CN=(.*),OU=rbac,DC=example,DC=com
          ldap.user.object.class: account
       

        kafka_rest_authentication_type: basic
        control_center_authentication_type: basic
        control_center_basic_users:
          admin:
            principal: admin
            password: admin-secret
            roles: Administrators
          guest:
            principal: guest
            password: guest-secret
            roles: Restricted
          test:
            principal: test
            password: test
            roles: Administrators
        control_center_custom_properties:
          confluent.controlcenter.name: C3Name
          confluent.controlcenter.rest.authentication.realm: ControlCenter
          confluent.controlcenter.rest.thread.pool.max: 315
          confluent.controlcenter.rest.thread.pool.min: 100
        control_center_custom_java_args: "-Djava.io.tmpdir=/var/lib/kafka/c3/"

      cluster1:
        kafka_connect_group_id: connect-cluster1
        kafka_connect_connector_white_list: "test_topic"
        kafka_connect_connectors:
          - name: sample-connector-1
            config:
              connector.class: "FileStreamSinkConnector"
              tasks.max: "5"
              file: "/etc/kafka/connect-distributed.properties"
              topics: "test_topic"
              key.converter: "org.apache.kafka.connect.json.JsonConverter"
              value.converter: "org.apache.kafka.connect.json.JsonConverter"

      ldap_server:
        ldap_admin_password: ldppassword
        ldap_rbac_group: rbac
        ldap_dc: example
        ldap_dc_extension: com
        ldap_users:
          - username: "{{schema_registry_ldap_user}}"
            password: "{{schema_registry_ldap_password}}"
            uid: 9998
            guid: 98
          - username: "{{kafka_connect_ldap_user}}"
            password: "{{kafka_connect_ldap_password}}"
            uid: 9997
            guid: 97
          - username: "{{ksql_ldap_user}}"
            password: "{{ksql_ldap_password}}"
            uid: 9996
            guid: 96
          - username: "{{control_center_ldap_user}}"
            password: "{{control_center_ldap_password}}"
            uid: 9995
            guid: 95
          - username: "{{kafka_rest_ldap_user}}"
            password: "{{kafka_rest_ldap_password}}"
            uid: 9994
            guid: 94
          - username: "{{mds_super_user}}"
            password: "{{mds_super_user_password}}"
            uid: 9993
            guid: 93
          - username: user1
            password: user1p
            uid: 9992
            guid: 92
          - username: user2
            password: user2p
            uid: 9991
            guid: 91
